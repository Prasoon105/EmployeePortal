package com.example.demo.model;


import jakarta.persistence.*;
import jakarta.validation.Valid;
import jakarta.validation.constraints.Email;
import jakarta.validation.constraints.NotEmpty;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Pattern;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import com.fasterxml.jackson.annotation.JsonFormat;


@Entity
@Data 
@NoArgsConstructor
@AllArgsConstructor
@Table(name= "Employee")  
@Valid
public class Employee {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long empId;
    @NotEmpty(message = "first name is mandatory")
    private String firstName;
    @NotEmpty(message = "last name is mandatory")
    private String lastName;
    @Column(name = "birth_date")
    @NotNull(message = "date of birth is mandatory")
    private Date dob;
    @NotEmpty(message = "gender is mandatory") //@notEmpty only of string and collection
    private String gender;
    @NotEmpty(message = "email is mandatory")
    @Email(message = "email not is mandatory")
    private String email;
    @NotEmpty(message = "contact number is mandatory")
    @Pattern(regexp = "^[0-9]{10}$", message = "Contact number must be exactly 10 digits")
    private String contact;
    @Column(name = "hire_date")
    @NotNull(message = "date of birth is mandatory")
    @JsonFormat(pattern = "dd/MM/yy")
    private Date hireDate;
    @NotNull(message = "salary is mandatory")
    private Double salary;
    private Long pManagerId;
    private Long rManagerId;

    @NotNull(message = "Address cannot be null")
    @Valid
    @Embedded 
    private Address address;

    @ManyToOne(cascade = { CascadeType.ALL })
    @JoinColumn(name = "department_id")
    private Department department;

    @ManyToMany(cascade = { CascadeType.ALL })
    @JoinTable(name = "employee_project",
        joinColumns = @JoinColumn(name = "emp_id"),
        inverseJoinColumns = @JoinColumn(name = "p_id"))
    private Set<Project> projects = new HashSet<>();

	
}



